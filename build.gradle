apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'checkstyle'
apply plugin: "jacoco"

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.13'
    }
}

repositories {
    mavenCentral()
}

def grpcVersion = '1.9.0'

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"

    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "junit:junit:4.12"
    testCompile "com.google.truth:truth:0.37"

    errorprone 'com.google.errorprone:error_prone_core:2.2.0'
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

[compileJava, compileTestJava].each() {
  it.options.compilerArgs += ["-XepExcludedPaths:.*/build/generated/.*"]
}

checkstyle {
    configFile = file("$rootDir/checkstyle.xml")
    toolVersion = "6.17"
    ignoreFailures = false
}

checkstyleMain {
    source = fileTree(dir: "src/main", include: "**/*.java")
}

checkstyleTest {
    source = fileTree(dir: "src/test", include: "**/*.java")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
